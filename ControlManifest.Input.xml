<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="CI" constructor="LoadingButton" version="0.0.1" display-name-key="LoadingButton" description-key="LoadingButton description" control-type="virtual" >
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!-- input properties -->
    <property name="Text" display-name-key="Text" description-key="Button text" of-type="SingleLine.Text" usage="input" required="false" default-value="Press Me"/>
    <property name="Delay" display-name-key="Delay" description-key="Timer delay in seconds" of-type="FP" usage="input" required="true" default-value="5"/>
    <property name="ButtonStyle" display-name-key="Button Style" description-key="Button style" of-type="Enum" usage="input" required="true" default-value="contained">
      <value name="Text" display-name-key="Text">text</value>
      <value name="Outlined" display-name-key="Outlined">outlined</value>
      <value name="Contained" display-name-key="Contained">contained</value>
    </property>
    <property name="ButtonSize" display-name-key="Button Size" description-key="Button size" of-type="Enum" usage="input" required="true" default-value="large">
      <value name="Small" display-name-key="Small">small</value>
      <value name="Medium" display-name-key="Medium">medium</value>
      <value name="Large" display-name-key="Large">large</value>
    </property>
    <property name="IconPosition" display-name-key="Icon Position" description-key="Icon position" of-type="Enum" usage="input" required="true" default-value="start">
      <value name="Start" display-name-key="Start">start</value>
      <value name="End" display-name-key="End">end</value>
    </property>
    <property name="BorderRadius" display-name-key="Border Radius" description-key="Button border radius" of-type="FP" usage="input" required="false"/>

    <!-- theme properties -->
    <property name="Font" display-name-key="Font" description-key="Font" of-type="SingleLine.Text" usage="input" required="false"/>
    <property name="FontSize" display-name-key="Font Size" description-key="Font" of-type="Whole.None" usage="input" required="false"/>
    <property name="FontColor" display-name-key="Font Color" description-key="Font color" of-type="SingleLine.Text" usage="input" required="false"/>
    <property name="FontWeight" display-name-key="Font Weight" description-key="Font weight" of-type="Enum" usage="input" required="false">
      <value name="Lighter" display-name-key="Lighter">Lighter</value>
      <value name="Normal" display-name-key="Normal">Normal</value>
      <value name="Semibold" display-name-key="Semibold">Semibold</value>
      <value name="Bold" display-name-key="Bold">Bold</value>
    </property>
    <property name="PrimaryColor" display-name-key="Primary Color" description-key="Primary color" of-type="SingleLine.Text" usage="input" required="false"/>
    <!--
      Property node's of-type attribute can be of-type-group attribute.
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="true" />
    -->

    <!-- output properties -->
    <property name="State" display-name-key="State" description-key="Button state" of-type="Enum" usage="output">
      <value name="Ready" display-name-key="true">ready</value>
      <value name="Wait" display-name-key="false">wait</value>
      <value name="Submit" display-name-key="false">submit</value>
    </property>
    
    <resources>
      <code path="index.ts" order="1"/>
      <platform-library name="React" version="16.8.6" />
      <!-- <platform-library name="Fluent" version="8.29.0" /> -->
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/LoadingButton.css" order="1" />
      <resx path="strings/LoadingButton.1033.resx" version="1.0.0" />
      -->
    </resources>
    <!-- UNCOMMENT TO ENABLE THE SPECIFIED API
    <feature-usage>
      <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" />
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
    -->
  </control>
</manifest>
